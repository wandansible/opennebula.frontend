---
- name: Remove old OpenNebula apt repository entry
  ansible.builtin.apt_repository:
    repo: deb https://downloads.opennebula.io/repo/{{ one_version }}/{{ ansible_distribution }}/{{ ansible_distribution_version }} stable opennebula
    filename: opennebula
    update_cache: no
    state: absent

- name: Remove OpenNebula apt signing key from default apt keyring
  ansible.builtin.apt_key:
    id: "{{ one_apt_key_fingerprint }}"
    keyring: /etc/apt/trusted.gpg
    state: absent

- name: Add OpenNebula apt signing key
  apt_key:
    id: "{{ one_apt_key_fingerprint }}"
    url: https://downloads.opennebula.io/repo/repo.key
    keyring: /usr/share/keyrings/opennebula.gpg
    state: present

- name: Add OpenNebula {{ one_version }} apt repository
  apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/opennebula.gpg] https://downloads.opennebula.io/repo/{{ one_version }}/{{ ansible_distribution }}/{{ ansible_distribution_version }} stable opennebula
    filename: opennebula
    update_cache: yes
    state: present

- name: Install OpenNebula and Sunstone
  apt:
    name: "{{ item }}={{ one_install_version }}*"
    dpkg_options: force-confnew
    install_recommends: no
    state: present
  loop:
    - opennebula
    - opennebula-sunstone

- name: Set oneadmin password
  template:
    src: one/one_auth
    dest: /var/lib/one/.one/one_auth
    owner: oneadmin
    group: oneadmin
    mode: '0600'
  no_log: true
  notify:
    - restart opennebula msg
    - restart opennebula-scheduler

- name: Configure /etc/one/oned.conf vars
  ansible.builtin.lineinfile:
    path: /etc/one/oned.conf
    regexp: '^{{ item.key }}\s*='
    line: '{{ item.key }} = "{{ item.value }}"'
    state: present
  loop: "{{ one_config.vars | dict2items }}"
  loop_control:
    label: "{{ item.key }} = {{ item.value }}"
  notify: restart opennebula msg

- name: Configure /etc/one/oned.conf sections
  ansible.builtin.replace:
    path: /etc/one/oned.conf
    regexp: '(?i)^{{ item.name }}\s*=\s*\[[^\[\]]*{{ item.match | default("") }}[^\[\]]*\]$'
    replace: |-
      {{ item.name | upper }} = [
        {{ item.value | trim | indent(2, false) }}
      ]
  loop: "{{ one_config.sections }}"
  loop_control:
    label: "{{ item.name }}"
  no_log: "{{ item.name | upper == 'DB' }}"
  notify: restart opennebula msg

- name: Create OpenNebula ssl directory
  file:
    path: /etc/one/ssl
    state: directory
    owner: root
    group: oneadmin
    mode: u=rwx,g=rx,o=

- name: Configure /etc/one/sunstone-server.conf
  lineinfile:
    path: /etc/one/sunstone-server.conf
    regexp: '^:{{ item.key }}:'
    line: ":{{ item.key }}: {{ item.value }}"
    state: present
  loop: "{{ one_sunstone_config | dict2items }}"
  loop_control:
    label: "{{ item.key }} = {{ item.value }}"
  notify:
    - restart opennebula-sunstone
    - restart opennebula-novnc

- name: Configure /etc/one/auth/ldap_auth.conf
  template:
    src: one/ldap_auth.conf
    dest: /etc/one/auth/ldap_auth.conf
    owner: root
    group: oneadmin
    mode: '0644'

- name: Configure OpenNebula monitord log level
  ansible.builtin.lineinfile:
    path: /etc/one/monitord.conf
    regexp: '(?i)^\s*debug_level\s*='
    line: "  debug_level = {{ one_debug_level }}"
    state: present
  notify: restart opennebula msg

- name: Configure opennebula-scheduler log level
  ansible.builtin.lineinfile:
    path: /etc/one/sched.conf
    regexp: '^(?i)^\s*DEBUG_LEVEL\s*='
    line: "  DEBUG_LEVEL = {{ one_debug_level }}"
    state: present
  notify: restart opennebula-scheduler

- name: Configure opennebula-hem log level
  ansible.builtin.lineinfile:
    path: /etc/one/onehem-server.conf
    regexp: '^:debug_level:'
    line: ":debug_level: {{ one_debug_level }}"
    state: present
  notify: restart opennebula-hem

- name: Remove fireedge sunstone config
  ansible.builtin.lineinfile:
    path: /etc/one/sunstone-server.conf
    regexp: '^:{{ item }}:'
    state: absent
  loop:
    - private_fireedge_endpoint
    - public_fireedge_endpoint

- name: Download OpenNebula LVM datastore drivers
  ansible.builtin.unarchive:
    src: https://github.com/wanduow/addon-lvm/archive/{{ one_addon_lvm_version }}.tar.gz
    remote_src: true
    dest: /usr/local/src/
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
    creates: /usr/local/src/addon-lvm-{{ one_addon_lvm_version }}

- name: Install OpenNebula LVM datastore drivers
  ansible.builtin.copy:
    src: /usr/local/src/addon-lvm-{{ one_addon_lvm_version }}/{{ item }}/lvm
    remote_src: true
    dest: /var/lib/one/remotes/{{ item }}/
    owner: oneadmin
    group: oneadmin
    mode: u=rwx,g=rx,o=
  loop:
    - datastore
    - tm
  notify: onehost sync

- name: Update OpenNebula Sunstone views features
  ansible.builtin.lineinfile:
    path: /etc/one/sunstone-views/{{ item.type | default("mixed") }}/{{ item.view }}.yaml
    regexp: '\s*{{ item.key }}:'
    insertafter: 'features:'
    line: "    {{ item.key }}: {{ item.value | bool | lower }}"
  loop: "{{ one_sunstone_view_features }}"
  loop_control:
    label: "{{ item.view }}: {{ item.key }}"
  notify: restart opennebula-sunstone

- name: Start and enable OpenNebula services
  ansible.builtin.systemd:
    name: "{{ item }}"
    daemon_reload: yes
    state: started
    enabled: yes
  loop:
    - opennebula
    - opennebula-sunstone
