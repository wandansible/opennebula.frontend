---
- name: Check if OpenNebula datastores need renaming
  ansible.builtin.command:
    cmd: >-
      onedatastore show
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "{{ item.name }}"
  loop: "{{ one_datastores | selectattr('id', 'defined') | list }}"
  loop_control:
    label: "{{ item.name }}"
  become: false
  no_log: true
  register: _one_ds_name_check
  changed_when: false
  failed_when:
    - _one_ds_name_check.rc != 0
    - "'not found' not in _one_ds_name_check.stderr"

# Work around due to the unique name check being case-insenstive
- name: Rename OpenNebula datastores to temporary name
  ansible.builtin.command:
    cmd: >-
      onedatastore rename
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "{{ item.id }}" "temp{{ item.id }}"
  loop: "{{ one_datastores | selectattr('id', 'defined') | list }}"
  loop_control:
    label: "{{ item.name }}"
    index_var: index
  when: _one_ds_name_check.results[index].rc != 0
  become: false
  no_log: true

- name: Rename OpenNebula datastores
  ansible.builtin.command:
    cmd: >-
      onedatastore rename
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "{{ item.id }}" "{{ item.name }}"
  loop: "{{ one_datastores | selectattr('id', 'defined') | list }}"
  loop_control:
    label: "{{ item.name }}"
    index_var: index
  when: _one_ds_name_check.results[index].rc != 0
  become: false
  no_log: true

- name: Add OpenNebula templates directory
  ansible.builtin.file:
    state: directory
    path: /var/lib/one/templates
    owner: oneadmin
    group: oneadmin
    mode: u=rwx,g=rx,o=rx

- name: Upload OpenNebula datastore templates
  ansible.builtin.template:
    src: one/datastore
    dest: /var/lib/one/templates/one_ds_{{ item.name }}.tmpl
    owner: oneadmin
    group: oneadmin
    mode: u=rw,g=r,o=r
  loop: "{{ one_datastores }}"
  loop_control:
    label: "{{ item.name }}"
  register: _one_template_upload

- name: Check if datastores exist in OpenNebula
  ansible.builtin.command:
    cmd: >-
      onedatastore show
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "{{ item.name }}"
  loop: "{{ one_datastores }}"
  loop_control:
    label: "{{ item.name }}"
  become: false
  no_log: true
  register: _one_ds_check
  changed_when: false
  failed_when:
    - _one_ds_check.rc != 0
    - "'not found' not in _one_ds_check.stderr"

- name: Add datastores to OpenNebula
  ansible.builtin.command:
    cmd: >-
      onedatastore create
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "/var/lib/one/templates/one_ds_{{ item.name }}.tmpl"
  when: _one_ds_check.results[index].rc != 0
  loop: "{{ one_datastores }}"
  loop_control:
    label: "{{ item.name }}"
    index_var: index
  no_log: true

- name: Update datastores in OpenNebula
  ansible.builtin.command:
    cmd: >-
      onedatastore update
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "{{ item.name }}"
      "/var/lib/one/templates/one_ds_{{ item.name }}.tmpl"
  when: _one_ds_check.results[index].rc == 0
  loop: "{{ one_datastores }}"
  loop_control:
    label: "{{ item.name }}"
    index_var: index
  no_log: true
  changed_when: _one_template_upload.results[index] is changed
